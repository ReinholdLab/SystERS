% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class_Boundary_Transport_Water.R
\name{Boundary_Transport_Water_Stream}
\alias{Boundary_Transport_Water_Stream}
\title{Class Boundary_Transport_Water_Stream (R6)
A model boundary that transports water to and from stream cells}
\description{
Transport boundary for water between stream cells
}
\section{Super classes}{
\code{\link[SoilsToStreams:Boundary]{SoilsToStreams::Boundary}} -> \code{\link[SoilsToStreams:Boundary_Transport_Water]{SoilsToStreams::Boundary_Transport_Water}} -> \code{Boundary_Transport_Water_Stream}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{channelVelocity}}{Mean velocity of water in the channel compartment}

\item{\code{populateDependencies}}{Updates channel velocity, residence time, and hydraulic load.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Boundary_Transport_Water_Stream-new}{\code{Boundary_Transport_Water_Stream$new()}}
\item \href{#method-Boundary_Transport_Water_Stream-populateDependenciesInternalBound}{\code{Boundary_Transport_Water_Stream$populateDependenciesInternalBound()}}
\item \href{#method-Boundary_Transport_Water_Stream-populateDependenciesExternalBound}{\code{Boundary_Transport_Water_Stream$populateDependenciesExternalBound()}}
\item \href{#method-Boundary_Transport_Water_Stream-trade}{\code{Boundary_Transport_Water_Stream$trade()}}
\item \href{#method-Boundary_Transport_Water_Stream-clone}{\code{Boundary_Transport_Water_Stream$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="SoilsToStreams" data-topic="Boundary_Transport_Water" data-id="store"><a href='../../SoilsToStreams/html/Boundary_Transport_Water.html#method-Boundary_Transport_Water-store'><code>SoilsToStreams::Boundary_Transport_Water$store()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Stream-new"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Stream-new}{}}}
\subsection{Method \code{new()}}{
Instantiate a water transport boundary in the stream processing domain
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Stream$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters inherit from Class \code{\link{Boundary_Transport_Water}} and thus \code{\link{Boundary}}}

\item{\code{discharge}}{Rate of water discharge (a.k.a. Q)}

\item{\code{boundaryIdx}}{String indexing the boundary}

\item{\code{currency}}{String naming the currency handled by the boundary as a character e.g., \code{water, NO3}}

\item{\code{upstreamCell}}{Cell (if one exists) upstream of the boundary}

\item{\code{downstreamCell}}{Cell (if one exists) downstream of the boundary}

\item{\code{timeInterval}}{Model time step}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A model boundary that transports water in the stream processing domain
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Stream-populateDependenciesInternalBound"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Stream-populateDependenciesInternalBound}{}}}
\subsection{Method \code{populateDependenciesInternalBound()}}{
Populate boundary dependencies for boundaries with
  exactly one upstream and one downstream cell.  Sets the
  \code{channelVelocity} based on the \code{discharge} and the cross
  sectional area of the boundary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Stream$populateDependenciesInternalBound()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Populates boundary dependencies
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Stream-populateDependenciesExternalBound"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Stream-populateDependenciesExternalBound}{}}}
\subsection{Method \code{populateDependenciesExternalBound()}}{
Populate boundary dependencies for boundaries at the
  edge of the topology (i.e., with either one upstream or one
  downstream cell).  Sets the \code{channelVelocity} based on the
  \code{discharge} and the cross sectional area of the boundary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Stream$populateDependenciesExternalBound()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Populates boundary dependencies
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Stream-trade"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Stream-trade}{}}}
\subsection{Method \code{trade()}}{
Calculates the trades between the stream water cells
  using the values provided for \code{discharge}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Stream$trade()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Updates the \code{volume} in the cell based on
  \code{discharge}. Returns a list with two elements
  (\code{discharge, volume}).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Stream-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Stream-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Stream$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
