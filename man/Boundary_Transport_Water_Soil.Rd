% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class_Boundary_Transport_Water.R
\name{Boundary_Transport_Water_Soil}
\alias{Boundary_Transport_Water_Soil}
\title{Class Boundary_Transport_Water_Soil (R6)
A model boundary that transports water to and from soil cells}
\description{
Transport boundary for water between soil cells
}
\section{Super classes}{
\code{\link[systERS:Boundary]{systERS::Boundary}} -> \code{\link[systERS:Boundary_Transport_Water]{systERS::Boundary_Transport_Water}} -> \code{Boundary_Transport_Water_Soil}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{spillOver}}{Volume of water moving from one cell to another}

\item{\code{populateDependencies}}{Updates input and spillOver between upstream and downstream cells.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Boundary_Transport_Water_Soil-new}{\code{Boundary_Transport_Water_Soil$new()}}
\item \href{#method-Boundary_Transport_Water_Soil-populateDependenciesInternalBound}{\code{Boundary_Transport_Water_Soil$populateDependenciesInternalBound()}}
\item \href{#method-Boundary_Transport_Water_Soil-trade}{\code{Boundary_Transport_Water_Soil$trade()}}
\item \href{#method-Boundary_Transport_Water_Soil-clone}{\code{Boundary_Transport_Water_Soil$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="systERS" data-topic="Boundary_Transport_Water" data-id="store"><a href='../../systERS/html/Boundary_Transport_Water.html#method-Boundary_Transport_Water-store'><code>systERS::Boundary_Transport_Water$store()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Soil-new"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Soil-new}{}}}
\subsection{Method \code{new()}}{
Instantiate a water transport boundary in the soil processing domain
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Soil$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters inherit from Class \code{\link{Boundary_Transport_Water}} and thus \code{\link{Boundary}}}

\item{\code{discharge}}{Rate of water discharge (a.k.a. Q)}

\item{\code{boundaryIdx}}{String indexing the boundary}

\item{\code{currency}}{String naming the currency handled by the boundary as a character e.g., \code{water, NO3}}

\item{\code{upstreamCell}}{Cell (if one exists) upstream of the boundary}

\item{\code{downstreamCell}}{Cell (if one exists) downstream of the boundary}

\item{\code{timeInterval}}{Model time step}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A model boundary that transports water in the stream processing domain
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Soil-populateDependenciesInternalBound"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Soil-populateDependenciesInternalBound}{}}}
\subsection{Method \code{populateDependenciesInternalBound()}}{
Populate boundary dependencies for boundaries with
  exactly one upstream and one downstream cell.  Sets the
  \code{spillOver} based on the \code{discharge} and the cross
  sectional area of the boundary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Soil$populateDependenciesInternalBound()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Populates boundary dependencies
#' @description Populate boundary dependencies for boundaries at the
#'   edge of the topology (i.e., with either one upstream or one
#'   downstream cell).  Sets the \code{channelVelocity} based on the
#'   \code{discharge} and the cross sectional area of the boundary.
#' @method Method
#'   Boundary_Transport_Water_Stream$populateDependenciesExternalBound
#' @return Populates boundary dependencies
populateDependenciesExternalBound = function(){
  # To get velocity, divide Q by the mean of x-sec area of u/s and d/s
  # cell.  Upstream model boundaries (ie, most upstream) will thus
  # have a velocity equal only to the d/s cell (because there is no
  # u/s cell).  The opposite is true for the most d/s boundaries.
  # Likewise, to get residence time, divide by the mean of u/s and d/s
  # channel lengths.  Upstream model boundaries will thus have the
  # channel length defined by the d/s cell because no u/s cell exists
  # and vice versa for d/s model boundaries. Same pattern applies to
  # hydraulic load...

  if(self$usModBound) {
    connectedCell <- self$downstreamCell
  } else if(self$dsModBound){
    connectedCell <- self$upstreamCell
  }

  depth <- connectedCell$channelDepth
  widthXdepth <- connectedCell$channelWidth * depth

  self$channelVelocity <- self$discharge / widthXdepth

},
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Soil-trade"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Soil-trade}{}}}
\subsection{Method \code{trade()}}{
Calculates the trades between the stream water cells
  using the values provided for \code{discharge}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Soil$trade()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Updates the \code{volume} in the cell based on
  \code{discharge}. Returns a list with two elements
  (\code{discharge, volume}).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Boundary_Transport_Water_Soil-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Boundary_Transport_Water_Soil-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Boundary_Transport_Water_Soil$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
